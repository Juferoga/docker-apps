version: '3.8'

services:
  app:
    image: sonarqube:community
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
      placement:
        constraints: [node.hostname == juferoga.tk]
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"
        - "traefik.http.routers.sonarqube.entrypoints=websecure"
        - "traefik.http.routers.sonarqube.rule=Host(`sonar.juferoga.tk`)"
        - "traefik.http.routers.sonarqube.service=sonarqube"
        - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    extra_hosts:
      - jenkins.juferoga.tk:IP
    networks:
      - default
      - proxy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://database:5432/sonarqube
      SONAR_JDBC_USERNAME: ADMIN
      SONAR_JDBC_PASSWORD: ADMIN
    volumes:
      - data:/opt/sonarqube/data
      - extensions:/opt/sonarqube/extensions
    depends_on:
      - database

  database:
    image: postgres
    networks:
      - default
    environment:
      POSTGRES_DB: sonarqube
      POSTGRES_USER: ADMIN
      POSTGRES_PASSWORD: ADMIN
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  data:
  extensions:
  postgres:

networks:
  reverse_proxy:
    external: true
